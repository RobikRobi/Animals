from src.worker import celery_app
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from src.config import config

@celery_app.task(name="send_email_task")  # üëà –∏–º—è –±–µ–∑ –º–æ–¥—É–ª—è
def send_email_task(email_receiver: str):
    smtp_server = config.env_data.SMTP_SERVER
    port = config.env_data.SMTP_PORT
    login = config.env_data.EMAIL_LOGIN
    password = config.env_data.EMAIL_PASSWORD
    sender_email = config.env_data.EMAIL_SENDER

    subject = "–ù–æ–≤–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ"
    body = """
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.

–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –≤–∞–∂–Ω–∞ –¥–ª—è –Ω–∞—Å.
"""
    message = MIMEMultipart("alternative")
    message["Subject"] = subject
    message["From"] = sender_email
    message["To"] = email_receiver
    message.attach(MIMEText(body, "plain"))

    try:
        with smtplib.SMTP(smtp_server, port) as server:
            server.starttls()
            server.login(login, password)
            server.sendmail(sender_email, email_receiver, message.as_string())
        print("Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email: {e}")